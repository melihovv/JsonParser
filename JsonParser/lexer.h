/*!
 *\file lexer.h
 *\author Alexander Melihov <amelihovv@ya.ru>
 *\version 0.0.1
 *
 *\license This code is distributed under the very permissive MIT License but,
 * if you use it, you might consider referring to the repository.
 *
 * The file contains declaration of lexer class.
 */

#ifndef LEXER_H
#define LEXER_H

#if !defined(yyFlexLexerOnce)
#include <FlexLexer.h>
#endif

#undef YY_DECL
#define YY_DECL melihovv::Json::Parser::symbol_type \
    melihovv::Json::Lexer::mylex(Driver& driver)

#include "parser.tab.hh"

namespace melihovv {
    namespace Json {

        class Driver;

        /*!
         * Lexer class.
         */
        class Lexer : public yyFlexLexer
        {
        public:
            /*! Stdin and stdout by default. */
            Lexer(std::istream* in = 0, std::ostream* out = 0)
                : yyFlexLexer(in, out)
            {
            }

            /*! This method is generated by flex according to YY_DECL. */
            virtual melihovv::Json::Parser::symbol_type mylex(
                melihovv::Json::Driver& driver
                );

        private:
            Lexer(const Lexer& rhs);
            Lexer& operator=(const Lexer& rhs);
        };
    }
}

#endif // LEXER_H